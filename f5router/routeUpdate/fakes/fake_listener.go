// Code generated by counterfeiter. DO NOT EDIT.
package fakes

import (
	"sync"

	"github.com/F5Networks/cf-bigip-ctlr/f5router/routeUpdate"
)

type FakeListener struct {
	UpdateRouteStub        func(routeUpdate.RouteUpdate)
	updateRouteMutex       sync.RWMutex
	updateRouteArgsForCall []struct {
		arg1 routeUpdate.RouteUpdate
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeListener) UpdateRoute(arg1 routeUpdate.RouteUpdate) {
	fake.updateRouteMutex.Lock()
	fake.updateRouteArgsForCall = append(fake.updateRouteArgsForCall, struct {
		arg1 routeUpdate.RouteUpdate
	}{arg1})
	fake.recordInvocation("UpdateRoute", []interface{}{arg1})
	fake.updateRouteMutex.Unlock()
	if fake.UpdateRouteStub != nil {
		fake.UpdateRouteStub(arg1)
	}
}

func (fake *FakeListener) UpdateRouteCallCount() int {
	fake.updateRouteMutex.RLock()
	defer fake.updateRouteMutex.RUnlock()
	return len(fake.updateRouteArgsForCall)
}

func (fake *FakeListener) UpdateRouteArgsForCall(i int) routeUpdate.RouteUpdate {
	fake.updateRouteMutex.RLock()
	defer fake.updateRouteMutex.RUnlock()
	return fake.updateRouteArgsForCall[i].arg1
}

func (fake *FakeListener) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.updateRouteMutex.RLock()
	defer fake.updateRouteMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeListener) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ routeUpdate.Listener = new(FakeListener)
